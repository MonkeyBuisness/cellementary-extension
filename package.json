{
  "name": "cellementary",
  "displayName": "Cellementary",
  "description": "All Visual Studio Code cell kernels in one extension!",
  "version": "0.4.0",
  "engines": {
    "vscode": "^1.62.0"
  },
  "categories": [
    "Notebooks",
    "Education",
    "Programming Languages",
    "Visualization"
  ],
  "author": {
    "email": "gutorov.artem@yandex.ru",
    "name": "Artsem Hutarau",
    "url": "https://github.com/MonkeyBuisness"
  },
  "bugs": {
    "email": "gutorov.artem@ayndex.ru",
    "url": "https://github.com/MonkeyBuisness/cellementary-extension/issues"
  },
  "contributors": [
    {
      "email": "gutorov.artem@yandex.ru",
      "name": "Artsem Hutarau",
      "url": "https://github.com/MonkeyBuisness"
    }
  ],
  "keywords": [
    "notebook",
    "cell",
    "markdown",
    "education"
  ],
  "maintainers": [
    {
      "email": "gutorov.artem@ayndex.ru",
      "name": "Artsem Hutarau",
      "url": "https://github.com/MonkeyBuisness"
    }
  ],
  "publisher": "ArtsemHutarau",
  "repository": {
    "type": "github",
    "url": "https://github.com/MonkeyBuisness/cellementary-extension"
  },
  "homepage": "https://github.com/MonkeyBuisness/cellementary-extension/blob/master/README.md",
  "main": "./out/extension.js",
  "activationEvents": [
    "onView:kernelsView",
    "onNotebookEditor:golangbook",
    "onNotebook:golangbook",
    "onNotebookEditor:htmlbook",
    "onNotebook:htmlbook",
    "onNotebookEditor:javabook",
    "onNotebook:javabook",
    "onNotebookEditor:sqlitebook",
    "onNotebook:sqlitebook"
  ],
  "icon": "resources/icon.png",
  "contributes": {
    "configuration": {
      "title": "Cellementary configuration",
      "properties": {
        "cellementary.kernels": {
          "type": "array",
          "default": [],
          "description": "Cellementary kernel settings",
          "items": {
            "type": "object",
            "title": "Kernal status",
            "properties": {
              "kernelType": {
                "type": "string",
                "description": "Kernel type",
                "required": true
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Is enabled",
                "required": false
              }
            }
          }
        },
        "cellementary.kernels_filter": {
          "type": "string",
          "default": "none",
          "description": "Kernels view filter",
          "enum": [
            "none",
            "by_enable_state",
            "by_language"
          ]
        }
      }
    },
    "notebooks": [
      {
        "type": "golangbook",
        "displayName": "Go book",
        "selector": [
          {
            "filenamePattern": "*.gobook"
          }
        ]
      },
      {
        "type": "htmlbook",
        "displayName": "HTML book",
        "selector": [
          {
            "filenamePattern": "*.htmlbook"
          }
        ]
      },
      {
        "type": "javabook",
        "displayName": "Java book",
        "selector": [
          {
            "filenamePattern": "*.javabook"
          }
        ]
      },
      {
        "type": "sqlitebook",
        "displayName": "SQLite book",
        "selector": [
          {
            "filenamePattern": "*.sqlitebook"
          }
        ]
      }
    ],
    "notebookRenderer": [
      {
        "id": "std-err-renderer",
        "entrypoint": "./out/renderers/std-error-renderer.js",
        "displayName": "Standart error renderer",
        "mimeTypes": [
          "application/vnd.code.notebook.error"
        ]
      },
      {
        "id": "std-test-renderer",
        "entrypoint": "./out/renderers/std-test-renderer.js",
        "displayName": "Standart test renderer",
        "mimeTypes": [
          "application/cellementary.test"
        ]
      },
      {
        "id": "std-text-renderer",
        "entrypoint": "./out/renderers/std-text-renderer.js",
        "displayName": "Standart text renderer",
        "mimeTypes": [
          "text/plain"
        ]
      },
      {
        "id": "dhtml-renderer",
        "entrypoint": "./out/renderers/dhtml-renderer.js",
        "displayName": "Dynamic HTML renderer",
        "mimeTypes": [
          "text/html"
        ]
      },
      {
        "id": "sql-table-renderer",
        "entrypoint": "./out/renderers/sql-table-renderer.js",
        "displayName": "SQL table renderer",
        "mimeTypes": [
          "application/cellementary.sql.table"
        ]
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "cellementary",
          "title": "Cellementary manager",
          "icon": "resources/ext.svg"
        }
      ]
    },
    "views": {
      "cellementary": [
        {
          "id": "kernelsView",
          "name": "Kernels"
        }
      ]
    },
    "menus": {
      "notebook/cell/title": [
        {
          "command": "cell.editMetadata",
          "group": "inline/output@1",
          "when": "notebookCellType == code"
        }
      ],
      "notebook/toolbar": [
        {
          "command": "notebook.editMetadata",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "command": "cellementary.ungroupAll",
          "when": "view == kernelsView",
          "group": "navigation"
        },
        {
          "command": "cellementary.groupByEnableState",
          "when": "view == kernelsView",
          "group": "navigation"
        },
        {
          "command": "cellementary.groupByLanguage",
          "when": "view == kernelsView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "cellementary.disableKernel",
          "when": "view == kernelsView && viewItem == 'controller_enabled'"
        },
        {
          "command": "cellementary.enableKernel",
          "when": "view == kernelsView && viewItem == 'controller_disabled'"
        },
        {
          "command": "cellementary.kernelInfo",
          "when": "view == kernelsView && viewItem =~ /controller/",
          "group": "inline"
        }
      ]
    },
    "commands": [
      {
        "title": "Edit cell metadata",
        "shortTitle": "Cell metadata",
        "command": "cell.editMetadata",
        "icon": "$(symbol-key)"
      },
      {
        "title": "Edit notebook metadata",
        "shortTitle": "Notebook metadata",
        "command": "notebook.editMetadata",
        "icon": "$(symbol-key)"
      },
      {
        "command": "cellementary.ungroupAll",
        "title": "Ungroup kernels",
        "icon": {
          "light": "resources/icons/light/no_filter.svg",
          "dark": "resources/icons/dark/no_filter.svg"
        }
      },
      {
        "command": "cellementary.groupByEnableState",
        "title": "Group kernels by enable state",
        "icon": {
          "light": "resources/icons/light/filter_one.svg",
          "dark": "resources/icons/dark/filter_one.svg"
        }
      },
      {
        "command": "cellementary.groupByLanguage",
        "title": "Group kernels by language",
        "icon": {
          "light": "resources/icons/light/filter_two.svg",
          "dark": "resources/icons/dark/filter_two.svg"
        }
      },
      {
        "command": "cellementary.enableKernel",
        "title": "Enable"
      },
      {
        "command": "cellementary.disableKernel",
        "title": "Disable"
      },
      {
        "command": "cellementary.kernelInfo",
        "title": "Show kernel info",
        "icon": {
          "light": "resources/icons/light/info.svg",
          "dark": "resources/icons/dark/info.svg"
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "webpack --mode production",
    "lint": "eslint src --ext ts",
    "watch": "webpack --mode development --watch",
    "pretest": "webpack --mode development && npm run lint",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.2",
    "@types/node": "14.x",
    "@types/node-fetch": "^2.5.10",
    "@types/uuid": "^8.3.3",
    "@types/vscode": "^1.62.0",
    "@types/vscode-notebook-renderer": "^1.57.8",
    "@types/webpack-env": "^1.16.0",
    "@typescript-eslint/eslint-plugin": "^4.26.0",
    "@typescript-eslint/parser": "^4.26.0",
    "css-loader": "^4.2.0",
    "eslint": "^7.27.0",
    "fork-ts-checker-webpack-plugin": "^5.0.14",
    "glob": "^7.1.7",
    "mocha": "^8.4.0",
    "node-fetch": "^2.6.1",
    "style-loader": "^1.2.1",
    "ts-loader": "^9.2.2",
    "typescript": "^4.3.2",
    "vscode-notebook-error-overlay": "^1.0.1",
    "vscode-test": "^1.5.2",
    "webpack": "^5.38.1",
    "webpack-cli": "^4.7.0"
  },
  "dependencies": {
    "@vscode/codicons": "^0.0.26",
    "@vscode/webview-ui-toolkit": "^0.8.4",
    "async-wait-until": "^2.0.9",
    "node-abort-controller": "^3.0.1",
    "node-html-parser": "^5.1.0",
    "uniquefilename": "^1.1.2",
    "uuid": "^8.3.2"
  }
}
