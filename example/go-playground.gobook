{"cells":[{"content":"# Welcome to the `GO-PLAYGROUND` notebook!","kind":1,"languageId":"markdown","metadata":{}},{"content":"This notebook has a `.gobook` file extension.\n\nTo play around with this book, we recommend that you select the `Go Playground` kernel at the top right of the screen.","kind":1,"languageId":"markdown","metadata":{}},{"content":"## Here are some examples of how it works.","kind":1,"languageId":"markdown","metadata":{}},{"content":"### Example 1: Hello world application","kind":1,"languageId":"markdown","metadata":{}},{"content":"package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\tfmt.Println(\"Hello world!\")\n}\n","kind":2,"languageId":"go","metadata":{}},{"content":"### Example 2: Output with delay","kind":1,"languageId":"markdown","metadata":{}},{"content":"package main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\nfunc main() {\n\tfor i := 0; i < 5; i++ { \n\t\tfmt.Println(\"Hello!\")\n\t\ttime.Sleep(time.Second)\n\t}\n}\n","kind":2,"languageId":"go","metadata":{}},{"content":"### Example 3: Panic!","kind":1,"languageId":"markdown","metadata":{}},{"content":"package main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\nfunc main() {\n\tfor i := 0; i < 5; i++ { \n\t\tfmt.Println(\"Hello!\")\n\t\ttime.Sleep(time.Second)\n\t\tif i == 1 {\n\t\t\tpanic(\"extremely unfixable error\")\n\t\t}\n\t}\n}\n","kind":2,"languageId":"go","metadata":{}},{"content":"### Example 4: Test","kind":1,"languageId":"markdown","metadata":{}},{"content":"package main\n\nimport (\n    \"testing\"\n)\n\n// Factorial returns a factorial of x.\nfunc Factorial(x int64) int64 {\n    if x <= 1 {\n        return 1\n    }\n\n    return x * Factorial(x - 1)\n}\n\nfunc Test_Factorial(t *testing.T) {\n    tt := []struct{\n        name string\n        x    int64\n        exp  int64\n    }{\n        {\n            name: \"zero\",\n            x:    0,\n            exp:  1,\n        },\n        {\n            name: \"five\",\n            x:    5,\n            exp:  120,\n        },\n        {\n            name: \"one\",\n            x:    1,\n            exp:  1,\n        },\n        {\n            name: \"negative\",\n            x:    -1,\n            exp:  1,\n        },\n    }\n    for _, tc := range tt {\n        t.Run(tc.name, func(t *testing.T) {\n            res := Factorial(tc.x)\n            if tc.exp != res {\n                t.Errorf(\"expected: %d, actual: %d\", tc.exp, res)\n            }\n        })\n    } \n}\n\nfunc Test_Something(t *testing.T) {\n    t.Run(\"all ok\", func(t *testing.T) {})\n\n    t.Run(\"fail: something wrong\", func(t *testing.T) {\n        t.Run(\"fail: inner something wrong\", func(t *testing.T) {\n            t.Error(\"something went wrong =/\")\n        })\n    })\n}\n","kind":2,"languageId":"go","metadata":{}},{"content":"### Example 5: Clear","kind":1,"languageId":"markdown","metadata":{}},{"content":"// Example from https://play.golang.org/\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"time\"\n)\n\nfunc main() {\n\tconst col = 30\n\t// Clear the screen by printing \\x0c.\n\tbar := fmt.Sprintf(\"\\x0c[%%-%vs]\", col)\n\tfor i := 0; i < col; i++ {\n\t\tfmt.Printf(bar, strings.Repeat(\"=\", i)+\">\")\n\t\ttime.Sleep(100 * time.Millisecond)\n\t}\n\tfmt.Printf(bar+\" Done!\", strings.Repeat(\"=\", col))\n}\n","kind":2,"languageId":"go","metadata":{}},{"content":"### Example 6: Syntax error","kind":1,"languageId":"markdown","metadata":{}},{"content":"package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\tfmt.println(\"Hello!\")\n}\n","kind":2,"languageId":"go","metadata":{}},{"content":"### Example 7: Multiple files","kind":1,"languageId":"markdown","metadata":{}},{"content":"// Example from https://play.golang.org/\n\npackage main\n\nimport (\n    \"play.ground/foo\"\n)\n        \nfunc main() {\n    foo.Bar()\n}\n        \n-- go.mod --\nmodule play.ground\n        \n-- foo/foo.go --\npackage foo\n        \nimport \"fmt\"\n        \nfunc Bar() {\n    fmt.Println(\"This function lives in an another file!\")\n}\n","kind":2,"languageId":"go","metadata":{}}],"metadata":{}}